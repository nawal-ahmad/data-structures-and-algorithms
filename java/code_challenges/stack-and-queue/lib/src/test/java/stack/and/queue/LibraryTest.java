/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package stack.and.queue;

import org.junit.jupiter.api.Test;
import stack.and.queue.structure.Queue;
import stack.and.queue.structure.Stack;

import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
    }
    @Test void stackTest() throws Exception {
      // Can successfully instantiate an empty stack
      Stack stack= new Stack();
      assertTrue(stack.isEmpty());

      stack.push("800");
      //Can successfully push onto a stack
      assertFalse(stack.isEmpty());

      stack.push("700");
      stack.push("600");
      //Can successfully push multiple values onto a stack
      assertEquals(stack.getSize(),3);

      // Can successfully pop off the stack
      stack.pop();
      stack.pop();
      assertEquals(stack.getSize(), 1);

      // Can successfully empty a stack after multiple pops
      stack.pop();
      assertTrue(stack.isEmpty());

      // Can successfully peek the next item on the stack
      stack.push("500");
      assertEquals(stack.peek(),"500");
      stack.pop();


      // Can successfully instantiate an empty queue
      Queue queue = new Queue();
      assertTrue(queue.isEmpty());

      //Can successfully enqueue into a queue
      queue.enqueue("AAA");
      assertFalse(queue.isEmpty());

      // Can successfully enqueue multiple values into a queue
      queue.enqueue("BBB");
      queue.enqueue("CCC");
      assertEquals(queue.getSize(),3);

      // Can successfully dequeue out of a queue the expected value
      queue.dequeue();
      assertEquals(queue.getSize(),2);

      // Can successfully peek into a queue, seeing the expected value
      assertEquals(queue.peek(), "BBB");

      // Can successfully empty a queue after multiple dequeues
      queue.dequeue();
      queue.dequeue();
      assertTrue(queue.isEmpty());
    }
}
