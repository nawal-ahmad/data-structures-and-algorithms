/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;


import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

class LibraryTest {

  @Test
  void addVertexTest(){
    Graph graph = new Graph();
    graph.addVertex("Sudoku");
    graph.addVertex("chess");
    graph.addVertex("Pubg");
    assertEquals(graph.getVertex(), graph.getVertex());
  }

  @Test void AddEdgeTest(){
    Graph graph = new Graph();
    graph.addVertex("Sudoku");
    graph.addVertex("chess");
    graph.addVertex("Pubg");

    graph.addEdge("Sudoku", "chess");
    graph.addEdge("Sudoku", "Pubg");
    graph.addEdge("Sudoku", "Sudoku");
    graph.addEdge("chess", "Pubg");
    assertEquals("[Vertex{label='Sudoku', weight=0}, Vertex{label='chess', weight=0}, Vertex{label='Pubg', weight=0}]",graph.getVertex().toString());
  }

  @Test
  public void emptyGraphTest(){
    Graph graph = new Graph();
    assertEquals(0,graph.size());
  }

  @Test void BreadthFirstTest(){
    Graph BreadthFirst = new Graph();
    Vertex a = BreadthFirst.addVertex("Pandora");
    Vertex b =  BreadthFirst.addVertex("Arendelle");
    Vertex c = BreadthFirst.addVertex("Metroville");
    Vertex d = BreadthFirst.addVertex("Monstropolis");
    Vertex e = BreadthFirst.addVertex("Narnia");
    Vertex f = BreadthFirst.addVertex("Naboo");

    BreadthFirst.addEdge("Pandora","Arendelle");
    BreadthFirst.addEdge("Arendelle","Metroville");
    BreadthFirst.addEdge("Arendelle","Monstropolis");
    BreadthFirst.addEdge("Metroville","Narnia");
    BreadthFirst.addEdge("Metroville","Naboo");
    BreadthFirst.addEdge("Monstropolis","Naboo");
    BreadthFirst.addEdge("Narnia","Naboo");

    assertEquals("[Vertex{label='Pandora', weight=0}, Vertex{label='Arendelle', weight=0}, Vertex{label='Metroville', weight=0}, Vertex{label='Monstropolis', weight=0}, Vertex{label='Narnia', weight=0}, Vertex{label='Naboo', weight=0}]",BreadthFirst.breadthFirst(a).toString());
  }

  @Test void depthFirst() {

    Graph graph = new Graph();
    Vertex a = graph.addVertex("A");
    Vertex b =  graph.addVertex("B");
    Vertex c = graph.addVertex("C");
    Vertex d = graph.addVertex("D");
    Vertex e = graph.addVertex("E");
    Vertex f = graph.addVertex("F");
    Vertex g = graph.addVertex("G");
    Vertex h = graph.addVertex("H");

    graph.addEdge("A","B");
    graph.addEdge("A","D");
    graph.addEdge("B","C");
    graph.addEdge("B","D");
    graph.addEdge("C","G");
    graph.addEdge("D","E");
    graph.addEdge("D","H");
    graph.addEdge("D","F");
    graph.addEdge("F","H");

    assertEquals("[A, D, F, H, E, B, C, G]" , graph.depthFirst(a).toString());
  }
}
